name: Make image

on:
    release:
        types: [published, edited]

jobs:
    build:
        strategy:
            fail-fast: true
            matrix:
               os: [ubuntu-latest]
               include:
                    - os: windows-latest
                      displayName: Windows
                      prefix: win
                      jpackageDownload: https://download.java.net/java/GA/jdk14/076bab302c7b4508975440c56f6cc26a/36/GPL/openjdk-14_windows-x64_bin.zip
                      jdk14Path: /jdk-14
                      app-image: bsl-language-server
                    - os: ubuntu-latest
                      displayName: Linux
                      prefix: nix
                      jpackageDownload: https://download.java.net/java/GA/jdk14/076bab302c7b4508975440c56f6cc26a/36/GPL/openjdk-14_linux-x64_bin.tar.gz
                      jdk14Path: /jdk-14
                      app-image: bsl-language-server
                    - os: macOS-latest
                      displayName: MacOS
                      prefix: mac
                      jpackageDownload: https://download.java.net/java/GA/jdk14/076bab302c7b4508975440c56f6cc26a/36/GPL/openjdk-14_osx-x64_bin.tar.gz
                      jdk14Path: /jdk-14.jdk/Contents/Home
                      app-image: bsl-language-server.app
        runs-on: ${{ matrix.os }}
        name: (${{ matrix.displayName }}) create image app version

        steps:
            - name: Checkout source
              uses: actions/checkout@v2             
            - name: Set up JDK
              uses: actions/setup-java@v1
              with:
                java-version: 13
            - name: Build with Gradle
              run: ./gradlew build
            - name: Download jpackage
                # We need to download jpackage from https://jdk.java.net/jpackage/
              run: |
                  import tarfile
                  import zipfile
                  import sys
                  if sys.version_info[0] >= 3:
                    from urllib.request import urlretrieve
                  else:
                    from urllib import urlretrieve

                  url = "${{ matrix.jpackageDownload }}"
                  tmpfile, headers = urlretrieve(url)
                  if (url.endswith("tar.gz")):
                    tar = tarfile.open(tmpfile)
                    tar.extractall()
                    tar.close()
                  elif (url.endswith("zip")):
                    zip = zipfile.ZipFile(tmpfile)
                    zip.extractall()
                    zip.close()
              shell: python
            - name: Build jpackage app-image
              run: python .github/scripts/make_image.py "${{ matrix.jdk14Path }}" "${{ matrix.prefix }}" "${{ matrix.app-image }}"
            - name: Upload artifact
              uses: actions/upload-artifact@master
              with:
                name: bsl-language-server_${{ matrix.prefix }}.zip
                path: ./${{ matrix.app-image }}
            - name: Upload assets to release
              uses: AButler/upload-release-assets@v1.0
              with:
                  files: './bsl-language-server_${{ matrix.prefix }}.zip'
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
            - name: Upload jar to release
              if: matrix.prefix == 'nix'
              uses: AButler/upload-release-assets@v1.0
              with:
                  files: './build/libs/*.jar'
                  repo-token: ${{ secrets.GITHUB_TOKEN }}
